{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e9b01ecc",
   "metadata": {
    "papermill": {
     "duration": 0.006495,
     "end_time": "2024-11-01T13:40:22.570967",
     "exception": false,
     "start_time": "2024-11-01T13:40:22.564472",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Análise de Vendas de Produtos**\n",
    "\n",
    "---\n",
    "\n",
    "Autor: **Gabriel Lino**\n",
    "\n",
    "<div style=\"display: flex; gap: 10px;\"> \n",
    "  <a href=\"mailto:gabriel.godoitb@gmail.com\"><img src=\"https://img.shields.io/badge/-Gmail-%23333?style=for-the-badge&logo=gmail&logoColor=white\" target=\"_blank\"></a>\n",
    "  <a href=\"https://www.linkedin.com/in/glgodoi\" target=\"_blank\"><img src=\"https://img.shields.io/badge/-LinkedIn-%230077B5?style=for-the-badge&logo=linkedin&logoColor=white\" target=\"_blank\"></a>  \n",
    "  <a href=\"https://github.com/GLK-7\" target=\"_blank\"><img src=\"https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&logo=github&logoColor=white\" target=\"_blank\"></a>  \n",
    "</div>\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f548db9",
   "metadata": {
    "papermill": {
     "duration": 0.005263,
     "end_time": "2024-11-01T13:40:22.582073",
     "exception": false,
     "start_time": "2024-11-01T13:40:22.576810",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Tópicos**\n",
    "\n",
    "<ol type=\"1\">\n",
    "    <li>Coleta de Dados;</li>\n",
    "    <li>Modelagem;</li>\n",
    "    <li>Conclusões;</li>\n",
    "</ol>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e91f91e1",
   "metadata": {
    "papermill": {
     "duration": 0.005238,
     "end_time": "2024-11-01T13:40:22.592748",
     "exception": false,
     "start_time": "2024-11-01T13:40:22.587510",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Descrição\n",
    "\n",
    "Este projeto tem como objetivo realizar uma análise estatística e visual das vendas de um supermercado, utilizando um dataset com informações detalhadas sobre transações realizadas em diferentes filiais e categorias de produtos dos meses: janeiro, fevereiro e março de 2019. O foco está em entender padrões de consumo, identificar os produtos mais vendidos, comparar o comportamento de compra entre diferentes tipos de clientes e explorar a distribuição de métodos de pagamento."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5dd447e6",
   "metadata": {
    "papermill": {
     "duration": 0.005113,
     "end_time": "2024-11-01T13:40:22.603313",
     "exception": false,
     "start_time": "2024-11-01T13:40:22.598200",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Objetivos\n",
    "\n",
    "- **Explorar os dados de vendas** para entender melhor os padrões de consumo por filial, categoria de produto e método de pagamento.\n",
    "- **Identificar o ticket médio** por tipo de cliente e analisar a margem de lucro de cada linha de produto.\n",
    "- **Analisar tendências temporais**, como dias ou horários de maior movimento.\n",
    "- **Visualizar os resultados** de maneira clara e intuitiva, facilitando a compreensão das principais descobertas.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3241a65f",
   "metadata": {
    "papermill": {
     "duration": 0.005101,
     "end_time": "2024-11-01T13:40:22.613865",
     "exception": false,
     "start_time": "2024-11-01T13:40:22.608764",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Pacotes e Bibliotecas\n",
    "\n",
    "Abaixo será feita a importação dos pacotes e bibliotecas utilizados nesse projeto."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "50ef5ed1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:22.627135Z",
     "iopub.status.busy": "2024-11-01T13:40:22.626733Z",
     "iopub.status.idle": "2024-11-01T13:40:25.257178Z",
     "shell.execute_reply": "2024-11-01T13:40:25.256146Z"
    },
    "papermill": {
     "duration": 2.640646,
     "end_time": "2024-11-01T13:40:25.259787",
     "exception": false,
     "start_time": "2024-11-01T13:40:22.619141",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fbf46c47",
   "metadata": {
    "papermill": {
     "duration": 0.005372,
     "end_time": "2024-11-01T13:40:25.270930",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.265558",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## **1. Coleta de Dados**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba445ef6",
   "metadata": {
    "papermill": {
     "duration": 0.005163,
     "end_time": "2024-11-01T13:40:25.281713",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.276550",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Nesta seção, será realizada a coleta e preparação dos dados utilizados na análise. Vamos carregar o dataset de vendas de supermercado, realizar a limpeza dos dados, e fazer as transformações necessárias para garantir a qualidade e integridade das informações a serem analisadas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d53b0170",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:25.295012Z",
     "iopub.status.busy": "2024-11-01T13:40:25.294478Z",
     "iopub.status.idle": "2024-11-01T13:40:25.349409Z",
     "shell.execute_reply": "2024-11-01T13:40:25.348197Z"
    },
    "papermill": {
     "duration": 0.064786,
     "end_time": "2024-11-01T13:40:25.351915",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.287129",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Invoice ID</th>\n",
       "      <th>Branch</th>\n",
       "      <th>City</th>\n",
       "      <th>Customer type</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Product line</th>\n",
       "      <th>Unit price</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Tax 5%</th>\n",
       "      <th>Total</th>\n",
       "      <th>Date</th>\n",
       "      <th>Time</th>\n",
       "      <th>Payment</th>\n",
       "      <th>cogs</th>\n",
       "      <th>gross margin percentage</th>\n",
       "      <th>gross income</th>\n",
       "      <th>Rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>750-67-8428</td>\n",
       "      <td>A</td>\n",
       "      <td>Yangon</td>\n",
       "      <td>Member</td>\n",
       "      <td>Female</td>\n",
       "      <td>Health and beauty</td>\n",
       "      <td>74.69</td>\n",
       "      <td>7</td>\n",
       "      <td>26.1415</td>\n",
       "      <td>548.9715</td>\n",
       "      <td>1/5/2019</td>\n",
       "      <td>13:08</td>\n",
       "      <td>Ewallet</td>\n",
       "      <td>522.83</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>26.1415</td>\n",
       "      <td>9.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>226-31-3081</td>\n",
       "      <td>C</td>\n",
       "      <td>Naypyitaw</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Female</td>\n",
       "      <td>Electronic accessories</td>\n",
       "      <td>15.28</td>\n",
       "      <td>5</td>\n",
       "      <td>3.8200</td>\n",
       "      <td>80.2200</td>\n",
       "      <td>3/8/2019</td>\n",
       "      <td>10:29</td>\n",
       "      <td>Cash</td>\n",
       "      <td>76.40</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>3.8200</td>\n",
       "      <td>9.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>631-41-3108</td>\n",
       "      <td>A</td>\n",
       "      <td>Yangon</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Male</td>\n",
       "      <td>Home and lifestyle</td>\n",
       "      <td>46.33</td>\n",
       "      <td>7</td>\n",
       "      <td>16.2155</td>\n",
       "      <td>340.5255</td>\n",
       "      <td>3/3/2019</td>\n",
       "      <td>13:23</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>324.31</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>16.2155</td>\n",
       "      <td>7.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>123-19-1176</td>\n",
       "      <td>A</td>\n",
       "      <td>Yangon</td>\n",
       "      <td>Member</td>\n",
       "      <td>Male</td>\n",
       "      <td>Health and beauty</td>\n",
       "      <td>58.22</td>\n",
       "      <td>8</td>\n",
       "      <td>23.2880</td>\n",
       "      <td>489.0480</td>\n",
       "      <td>1/27/2019</td>\n",
       "      <td>20:33</td>\n",
       "      <td>Ewallet</td>\n",
       "      <td>465.76</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>23.2880</td>\n",
       "      <td>8.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>373-73-7910</td>\n",
       "      <td>A</td>\n",
       "      <td>Yangon</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Male</td>\n",
       "      <td>Sports and travel</td>\n",
       "      <td>86.31</td>\n",
       "      <td>7</td>\n",
       "      <td>30.2085</td>\n",
       "      <td>634.3785</td>\n",
       "      <td>2/8/2019</td>\n",
       "      <td>10:37</td>\n",
       "      <td>Ewallet</td>\n",
       "      <td>604.17</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>30.2085</td>\n",
       "      <td>5.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Invoice ID Branch       City Customer type  Gender  \\\n",
       "0  750-67-8428      A     Yangon        Member  Female   \n",
       "1  226-31-3081      C  Naypyitaw        Normal  Female   \n",
       "2  631-41-3108      A     Yangon        Normal    Male   \n",
       "3  123-19-1176      A     Yangon        Member    Male   \n",
       "4  373-73-7910      A     Yangon        Normal    Male   \n",
       "\n",
       "             Product line  Unit price  Quantity   Tax 5%     Total       Date  \\\n",
       "0       Health and beauty       74.69         7  26.1415  548.9715   1/5/2019   \n",
       "1  Electronic accessories       15.28         5   3.8200   80.2200   3/8/2019   \n",
       "2      Home and lifestyle       46.33         7  16.2155  340.5255   3/3/2019   \n",
       "3       Health and beauty       58.22         8  23.2880  489.0480  1/27/2019   \n",
       "4       Sports and travel       86.31         7  30.2085  634.3785   2/8/2019   \n",
       "\n",
       "    Time      Payment    cogs  gross margin percentage  gross income  Rating  \n",
       "0  13:08      Ewallet  522.83                 4.761905       26.1415     9.1  \n",
       "1  10:29         Cash   76.40                 4.761905        3.8200     9.6  \n",
       "2  13:23  Credit card  324.31                 4.761905       16.2155     7.4  \n",
       "3  20:33      Ewallet  465.76                 4.761905       23.2880     8.4  \n",
       "4  10:37      Ewallet  604.17                 4.761905       30.2085     5.3  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Carregar o dataset\n",
    "file_path = '/kaggle/input/supermarket-sales/supermarket_sales - Sheet1.csv'  # Atualize o caminho conforme necessário\n",
    "df = pd.read_csv(file_path)\n",
    "\n",
    "# Visualizar as primeiras linhas do DataFrame\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "729a18a6",
   "metadata": {
    "papermill": {
     "duration": 0.005735,
     "end_time": "2024-11-01T13:40:25.363771",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.358036",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 1.1 Exploração dos dados"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b77ea673",
   "metadata": {
    "papermill": {
     "duration": 0.005533,
     "end_time": "2024-11-01T13:40:25.375284",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.369751",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Neste trecho de código, realizamos uma exploração inicial do dataset para entender melhor sua estrutura e características básicas:\n",
    "\n",
    "- **Estrutura do DataFrame** (`df.info()`): Esse comando fornece informações gerais sobre o DataFrame, incluindo o número de entradas, nomes e tipos de cada coluna, e se há valores ausentes. Esse passo é fundamental para termos uma visão geral dos dados e identificarmos possíveis problemas, como colunas com dados faltantes ou tipos de dados inadequados para análise.\n",
    "\n",
    "- **Estatísticas Descritivas** (`df.describe()`): Este comando exibe estatísticas descritivas das colunas numéricas, como média, desvio padrão, valor mínimo, valor máximo, e percentis. Essa análise nos ajuda a entender a distribuição dos dados e a identificar possíveis outliers ou valores fora do padrão.\n",
    "\n",
    "Esses dois comandos são essenciais para a fase de exploração inicial, pois permitem conhecer melhor o dataset antes de realizar análises mais detalhadas.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "91d116e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:25.389359Z",
     "iopub.status.busy": "2024-11-01T13:40:25.388258Z",
     "iopub.status.idle": "2024-11-01T13:40:25.439662Z",
     "shell.execute_reply": "2024-11-01T13:40:25.438514Z"
    },
    "papermill": {
     "duration": 0.06102,
     "end_time": "2024-11-01T13:40:25.442089",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.381069",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1000 entries, 0 to 999\n",
      "Data columns (total 17 columns):\n",
      " #   Column                   Non-Null Count  Dtype  \n",
      "---  ------                   --------------  -----  \n",
      " 0   Invoice ID               1000 non-null   object \n",
      " 1   Branch                   1000 non-null   object \n",
      " 2   City                     1000 non-null   object \n",
      " 3   Customer type            1000 non-null   object \n",
      " 4   Gender                   1000 non-null   object \n",
      " 5   Product line             1000 non-null   object \n",
      " 6   Unit price               1000 non-null   float64\n",
      " 7   Quantity                 1000 non-null   int64  \n",
      " 8   Tax 5%                   1000 non-null   float64\n",
      " 9   Total                    1000 non-null   float64\n",
      " 10  Date                     1000 non-null   object \n",
      " 11  Time                     1000 non-null   object \n",
      " 12  Payment                  1000 non-null   object \n",
      " 13  cogs                     1000 non-null   float64\n",
      " 14  gross margin percentage  1000 non-null   float64\n",
      " 15  gross income             1000 non-null   float64\n",
      " 16  Rating                   1000 non-null   float64\n",
      "dtypes: float64(7), int64(1), object(9)\n",
      "memory usage: 132.9+ KB\n",
      "None\n",
      "        Unit price     Quantity       Tax 5%        Total        cogs  \\\n",
      "count  1000.000000  1000.000000  1000.000000  1000.000000  1000.00000   \n",
      "mean     55.672130     5.510000    15.379369   322.966749   307.58738   \n",
      "std      26.494628     2.923431    11.708825   245.885335   234.17651   \n",
      "min      10.080000     1.000000     0.508500    10.678500    10.17000   \n",
      "25%      32.875000     3.000000     5.924875   124.422375   118.49750   \n",
      "50%      55.230000     5.000000    12.088000   253.848000   241.76000   \n",
      "75%      77.935000     8.000000    22.445250   471.350250   448.90500   \n",
      "max      99.960000    10.000000    49.650000  1042.650000   993.00000   \n",
      "\n",
      "       gross margin percentage  gross income      Rating  \n",
      "count              1000.000000   1000.000000  1000.00000  \n",
      "mean                  4.761905     15.379369     6.97270  \n",
      "std                   0.000000     11.708825     1.71858  \n",
      "min                   4.761905      0.508500     4.00000  \n",
      "25%                   4.761905      5.924875     5.50000  \n",
      "50%                   4.761905     12.088000     7.00000  \n",
      "75%                   4.761905     22.445250     8.50000  \n",
      "max                   4.761905     49.650000    10.00000  \n"
     ]
    }
   ],
   "source": [
    "# Informações sobre o DataFrame\n",
    "print(df.info())\n",
    "\n",
    "# Estatísticas descritivas\n",
    "print(df.describe())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2b9c4ba",
   "metadata": {
    "papermill": {
     "duration": 0.006179,
     "end_time": "2024-11-01T13:40:25.454664",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.448485",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 1.2 Limpeza de Dados \n",
    "\n",
    "Para garantir a qualidade e integridade dos dados, aplicamos algumas etapas de limpeza essenciais:\n",
    "\n",
    "- **Remoção de Dados Faltantes**: Utilizamos o comando `dropna()` para remover qualquer linha com valores ausentes no DataFrame. Isso garante que todas as análises sejam realizadas com informações completas e consistentes.\n",
    "\n",
    "- **Remoção de Duplicatas**: \n",
    "  - Primeiramente, foram removidas duplicatas com base na coluna `Invoice ID`, pois cada transação deve ser única. Isso evita que o mesmo registro de venda seja contado mais de uma vez.\n",
    "  - Em seguida, foi realizada uma verificação final para garantir que não restem duplicatas completas no DataFrame.\n",
    "\n",
    "Essas etapas são fundamentais para evitar distorções nos resultados da análise, garantindo que o dataset represente com precisão as transações reais de vendas.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "671a1474",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:25.468831Z",
     "iopub.status.busy": "2024-11-01T13:40:25.468426Z",
     "iopub.status.idle": "2024-11-01T13:40:25.481350Z",
     "shell.execute_reply": "2024-11-01T13:40:25.480173Z"
    },
    "papermill": {
     "duration": 0.023036,
     "end_time": "2024-11-01T13:40:25.483825",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.460789",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Remover dados faltantes\n",
    "df.dropna(inplace=True)\n",
    "\n",
    "# Remover duplicatas com base no Invoice ID\n",
    "df.drop_duplicates(subset='Invoice ID', inplace=True)\n",
    "\n",
    "# Remover duplicatas\n",
    "df.drop_duplicates(inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc4bdbbc",
   "metadata": {
    "papermill": {
     "duration": 0.005884,
     "end_time": "2024-11-01T13:40:25.495982",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.490098",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Agora faremos um pequeno ajuste no padrão de data e também criaremos uma coluna de data no formato pt-br apenas pra facilitar o entendimento"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5da7e109",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:25.509890Z",
     "iopub.status.busy": "2024-11-01T13:40:25.509483Z",
     "iopub.status.idle": "2024-11-01T13:40:25.553351Z",
     "shell.execute_reply": "2024-11-01T13:40:25.552147Z"
    },
    "papermill": {
     "duration": 0.053941,
     "end_time": "2024-11-01T13:40:25.556065",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.502124",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Invoice ID</th>\n",
       "      <th>Branch</th>\n",
       "      <th>City</th>\n",
       "      <th>Customer type</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Product line</th>\n",
       "      <th>Unit price</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Tax 5%</th>\n",
       "      <th>Total</th>\n",
       "      <th>Date</th>\n",
       "      <th>Time</th>\n",
       "      <th>Payment</th>\n",
       "      <th>cogs</th>\n",
       "      <th>gross margin percentage</th>\n",
       "      <th>gross income</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Date_pt_br</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>750-67-8428</td>\n",
       "      <td>A</td>\n",
       "      <td>Yangon</td>\n",
       "      <td>Member</td>\n",
       "      <td>Female</td>\n",
       "      <td>Health and beauty</td>\n",
       "      <td>74.69</td>\n",
       "      <td>7</td>\n",
       "      <td>26.1415</td>\n",
       "      <td>548.9715</td>\n",
       "      <td>01-05-2019</td>\n",
       "      <td>13:08</td>\n",
       "      <td>Ewallet</td>\n",
       "      <td>522.83</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>26.1415</td>\n",
       "      <td>9.1</td>\n",
       "      <td>05/01/2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>226-31-3081</td>\n",
       "      <td>C</td>\n",
       "      <td>Naypyitaw</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Female</td>\n",
       "      <td>Electronic accessories</td>\n",
       "      <td>15.28</td>\n",
       "      <td>5</td>\n",
       "      <td>3.8200</td>\n",
       "      <td>80.2200</td>\n",
       "      <td>03-08-2019</td>\n",
       "      <td>10:29</td>\n",
       "      <td>Cash</td>\n",
       "      <td>76.40</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>3.8200</td>\n",
       "      <td>9.6</td>\n",
       "      <td>08/03/2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>631-41-3108</td>\n",
       "      <td>A</td>\n",
       "      <td>Yangon</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Male</td>\n",
       "      <td>Home and lifestyle</td>\n",
       "      <td>46.33</td>\n",
       "      <td>7</td>\n",
       "      <td>16.2155</td>\n",
       "      <td>340.5255</td>\n",
       "      <td>03-03-2019</td>\n",
       "      <td>13:23</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>324.31</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>16.2155</td>\n",
       "      <td>7.4</td>\n",
       "      <td>03/03/2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>123-19-1176</td>\n",
       "      <td>A</td>\n",
       "      <td>Yangon</td>\n",
       "      <td>Member</td>\n",
       "      <td>Male</td>\n",
       "      <td>Health and beauty</td>\n",
       "      <td>58.22</td>\n",
       "      <td>8</td>\n",
       "      <td>23.2880</td>\n",
       "      <td>489.0480</td>\n",
       "      <td>01-27-2019</td>\n",
       "      <td>20:33</td>\n",
       "      <td>Ewallet</td>\n",
       "      <td>465.76</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>23.2880</td>\n",
       "      <td>8.4</td>\n",
       "      <td>27/01/2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>373-73-7910</td>\n",
       "      <td>A</td>\n",
       "      <td>Yangon</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Male</td>\n",
       "      <td>Sports and travel</td>\n",
       "      <td>86.31</td>\n",
       "      <td>7</td>\n",
       "      <td>30.2085</td>\n",
       "      <td>634.3785</td>\n",
       "      <td>02-08-2019</td>\n",
       "      <td>10:37</td>\n",
       "      <td>Ewallet</td>\n",
       "      <td>604.17</td>\n",
       "      <td>4.761905</td>\n",
       "      <td>30.2085</td>\n",
       "      <td>5.3</td>\n",
       "      <td>08/02/2019</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Invoice ID Branch       City Customer type  Gender  \\\n",
       "0  750-67-8428      A     Yangon        Member  Female   \n",
       "1  226-31-3081      C  Naypyitaw        Normal  Female   \n",
       "2  631-41-3108      A     Yangon        Normal    Male   \n",
       "3  123-19-1176      A     Yangon        Member    Male   \n",
       "4  373-73-7910      A     Yangon        Normal    Male   \n",
       "\n",
       "             Product line  Unit price  Quantity   Tax 5%     Total  \\\n",
       "0       Health and beauty       74.69         7  26.1415  548.9715   \n",
       "1  Electronic accessories       15.28         5   3.8200   80.2200   \n",
       "2      Home and lifestyle       46.33         7  16.2155  340.5255   \n",
       "3       Health and beauty       58.22         8  23.2880  489.0480   \n",
       "4       Sports and travel       86.31         7  30.2085  634.3785   \n",
       "\n",
       "         Date   Time      Payment    cogs  gross margin percentage  \\\n",
       "0  01-05-2019  13:08      Ewallet  522.83                 4.761905   \n",
       "1  03-08-2019  10:29         Cash   76.40                 4.761905   \n",
       "2  03-03-2019  13:23  Credit card  324.31                 4.761905   \n",
       "3  01-27-2019  20:33      Ewallet  465.76                 4.761905   \n",
       "4  02-08-2019  10:37      Ewallet  604.17                 4.761905   \n",
       "\n",
       "   gross income  Rating  Date_pt_br  \n",
       "0       26.1415     9.1  05/01/2019  \n",
       "1        3.8200     9.6  08/03/2019  \n",
       "2       16.2155     7.4  03/03/2019  \n",
       "3       23.2880     8.4  27/01/2019  \n",
       "4       30.2085     5.3  08/02/2019  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Converter a coluna 'Date' para o tipo datetime\n",
    "df['Date'] = pd.to_datetime(df['Date'], format='%m/%d/%Y')\n",
    "\n",
    "# Criar a coluna com o formato '05/01/2019' (pt-BR)\n",
    "df['Date_pt_br'] = df['Date'].dt.strftime('%d/%m/%Y')\n",
    "\n",
    "# Criar a coluna com o formato '01-05-2019'\n",
    "df['Date'] = df['Date'].dt.strftime('%m-%d-%Y')\n",
    "\n",
    "# Exibir o DataFrame resultante\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "122d769f",
   "metadata": {
    "papermill": {
     "duration": 0.006399,
     "end_time": "2024-11-01T13:40:25.570093",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.563694",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "- **Granularidade**: É possível identificar a granularidade diária na tabela."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be8fc0eb",
   "metadata": {
    "papermill": {
     "duration": 0.006246,
     "end_time": "2024-11-01T13:40:25.582937",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.576691",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## **2. Modelagem**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7deae11",
   "metadata": {
    "papermill": {
     "duration": 0.006311,
     "end_time": "2024-11-01T13:40:25.595801",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.589490",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Nesta seção, aplicamos métodos estatísticos para investigar as principais questões levantadas na análise dos dados de vendas. A modelagem estatística e a análise exploratória têm como objetivo identificar padrões de comportamento e verificar hipóteses com base em aspectos específicos das colunas do dataset, como:\n",
    "\n",
    "- **Filial e Cidade**: Analisamos o volume de vendas por filial e cidade para identificar as regiões de maior desempenho.\n",
    "- **Tipo de Cliente**: Comparação entre clientes `Member` e `Normal` para avaliar qual tipo de cliente possui maior ticket médio e frequência de compra.\n",
    "- **Linha de Produto**: Verificação das categorias de produtos mais populares e comparação de ticket médio entre diferentes linhas de produtos.\n",
    "- **Método de Pagamento**: Análise dos métodos de pagamento mais utilizados e sua correlação com o valor total das compras.\n",
    "- **Análise Temporal**: Identificação de padrões de vendas em determinados dias e horários de pico.\n",
    "- **Lucro Bruto e Margem Bruta**: Cálculo da lucratividade média por produto e por categoria para entender o desempenho financeiro.\n",
    "\n",
    "Utilizamos ferramentas estatísticas como tabelas de frequência, medidas de centralidade e dispersão, testes de correlação e visualizações para apresentar os principais achados. Essa abordagem permite uma visão ampla e detalhada das características e tendências de consumo do dataset.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34663dfd",
   "metadata": {
    "papermill": {
     "duration": 0.006078,
     "end_time": "2024-11-01T13:40:25.608261",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.602183",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Análise de Vendas por Filial\n",
    "\n",
    "Neste trecho de código, calculamos o total de vendas para cada filial utilizando a coluna `Branch`:\n",
    "\n",
    "- **Agrupamento por Filial**: Utilizamos a função `groupby()` para agrupar os dados pela coluna `Branch`, que representa as filiais A, B e C.\n",
    "- **Cálculo do Total de Vendas**: Em seguida, aplicamos a função `sum()` na coluna `Total` para calcular a soma das vendas em cada filial.\n",
    "\n",
    "O resultado mostra o valor total de vendas para cada uma das três filiais, permitindo uma comparação direta do desempenho de vendas entre elas. Essa análise é útil para identificar qual filial teve o maior volume de vendas no período analisado.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "920560cd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:25.623975Z",
     "iopub.status.busy": "2024-11-01T13:40:25.622857Z",
     "iopub.status.idle": "2024-11-01T13:40:25.633144Z",
     "shell.execute_reply": "2024-11-01T13:40:25.631837Z"
    },
    "papermill": {
     "duration": 0.02054,
     "end_time": "2024-11-01T13:40:25.635617",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.615077",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Branch\n",
      "A    106200.3705\n",
      "B    106197.6720\n",
      "C    110568.7065\n",
      "Name: Total, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "valor_total_vendas_filial = df.groupby('Branch')['Total'].sum()\n",
    "print(valor_total_vendas_filial)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29b3e206",
   "metadata": {
    "papermill": {
     "duration": 0.006217,
     "end_time": "2024-11-01T13:40:25.648387",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.642170",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Insights\n",
    "\n",
    "É possível notar um equilíbrio em valor de vendas pelas três filiais, com apenas uma variação da filial C com uma soma de vendas 4 mil a mais que as outras duas.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ed2a3b75",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:25.662861Z",
     "iopub.status.busy": "2024-11-01T13:40:25.662456Z",
     "iopub.status.idle": "2024-11-01T13:40:25.671716Z",
     "shell.execute_reply": "2024-11-01T13:40:25.670741Z"
    },
    "papermill": {
     "duration": 0.019224,
     "end_time": "2024-11-01T13:40:25.674051",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.654827",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Customer type\n",
      "Member    327.791305\n",
      "Normal    318.122856\n",
      "Name: Total, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "media_vendas_cliente = df.groupby('Customer type')['Total'].mean()\n",
    "print(media_vendas_cliente)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b4de29a8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:25.689519Z",
     "iopub.status.busy": "2024-11-01T13:40:25.688569Z",
     "iopub.status.idle": "2024-11-01T13:40:25.957510Z",
     "shell.execute_reply": "2024-11-01T13:40:25.956500Z"
    },
    "papermill": {
     "duration": 0.27945,
     "end_time": "2024-11-01T13:40:25.960042",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.680592",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='Payment', data=df)\n",
    "plt.title('Distribuição de Métodos de Pagamento')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ea0a5b67",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:25.976162Z",
     "iopub.status.busy": "2024-11-01T13:40:25.975711Z",
     "iopub.status.idle": "2024-11-01T13:40:25.984236Z",
     "shell.execute_reply": "2024-11-01T13:40:25.983152Z"
    },
    "papermill": {
     "duration": 0.01925,
     "end_time": "2024-11-01T13:40:25.986525",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.967275",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Product line\n",
      "Home and lifestyle        336.636956\n",
      "Sports and travel         332.065220\n",
      "Health and beauty         323.643020\n",
      "Food and beverages        322.671517\n",
      "Electronic accessories    319.632538\n",
      "Fashion accessories       305.089298\n",
      "Name: Total, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "valor_venda_media_produto = df.groupby('Product line')['Total'].mean().sort_values(ascending=False)\n",
    "print(valor_venda_media_produto)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f30c463a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:26.002880Z",
     "iopub.status.busy": "2024-11-01T13:40:26.002482Z",
     "iopub.status.idle": "2024-11-01T13:40:26.350390Z",
     "shell.execute_reply": "2024-11-01T13:40:26.349186Z"
    },
    "papermill": {
     "duration": 0.359286,
     "end_time": "2024-11-01T13:40:26.353237",
     "exception": false,
     "start_time": "2024-11-01T13:40:25.993951",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Date'] = pd.to_datetime(df['Date'], format='%m-%d-%Y')\n",
    "valor_vendas_por_mes = df.groupby(df['Date'].dt.date)['Total'].mean()\n",
    "valor_vendas_por_mes.plot(figsize=(10, 5), title=\"Total de Vendas Diárias\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3d009726",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-01T13:40:26.371785Z",
     "iopub.status.busy": "2024-11-01T13:40:26.371400Z",
     "iopub.status.idle": "2024-11-01T13:40:26.379435Z",
     "shell.execute_reply": "2024-11-01T13:40:26.378419Z"
    },
    "papermill": {
     "duration": 0.02,
     "end_time": "2024-11-01T13:40:26.381884",
     "exception": false,
     "start_time": "2024-11-01T13:40:26.361884",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Product line\n",
      "Home and lifestyle        16.030331\n",
      "Sports and travel         15.812630\n",
      "Health and beauty         15.411572\n",
      "Food and beverages        15.365310\n",
      "Electronic accessories    15.220597\n",
      "Fashion accessories       14.528062\n",
      "Name: gross income, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "lucro_medio_produto = df.groupby('Product line')['gross income'].mean().sort_values(ascending=False)\n",
    "print(lucro_medio_produto)\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 205965,
     "sourceId": 451952,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.249981,
   "end_time": "2024-11-01T13:40:27.011032",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-11-01T13:40:19.761051",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
